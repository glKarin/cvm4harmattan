
/**
 * Copyright  1990-2008 Sun Microsystems, Inc. All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
 * 
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License version
 * 2 only, as published by the Free Software Foundation.
 * 
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * General Public License version 2 for more details (a copy is
 * included at /legal/license.txt).
 * 
 * You should have received a copy of the GNU General Public License
 * version 2 along with this work; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA
 * 
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa
 * Clara, CA 95054 or visit www.sun.com if you need additional
 * information or have any questions.
 * 
 * These are constant defines both in native and Java layers.
 * NOTE: DO NOT EDIT. THIS FILE IS GENERATED. If you want to 
 * edit it, you need to modify the corresponding XML files.
 *
 * Patent pending.
 */
#ifndef _MIDP_CONSTANT_CORE_H_
#define _MIDP_CONSTANT_CORE_H_

#include <pcsl_string.h>

/**
 * @file
 *
 * Constant defination file.
 * Automatic generated. Do not edit this file.
 */


/**
 * Threshold for image cache storage
 *
 * Package: Constants
 */ 
#define IMAGE_CACHE_THRESHOLD (100*1024)

/**
 * Whether your platform supports File System. Set to true when File System 
 * is not supported; set to false when File System is supported.
 *
 * Package: Constants
 */ 
#define PORTING_NO_FILESYSTEM 0

/**
 * When false, Chameleon will not even attempt to load images for the UI.
 *
 * Package: Constants
 */ 
#define CHAM_USE_IMAGES 1

/**
 * When false, Chameleon will not even attempt to load romized images for the 
 * UI.
 *
 * Package: Constants
 */ 
#define CHAM_ROMIZED_IMAGES 1

/**
 * (Chameleon Only) display width
 *
 * Package: Constants
 */ 
#define CHAM_WIDTH 480

/**
 * (Chameleon Only) full display width
 *
 * Package: Constants
 */ 
#define CHAM_FULLWIDTH 480

/**
 * (Chameleon Only) display height
 *
 * Package: Constants
 */ 
#define CHAM_HEIGHT 720

/**
 * (Chameleon Only) full display height
 *
 * Package: Constants
 */ 
#define CHAM_FULLHEIGHT 720

/**
 * (Chameleon Only) 2-D Traversal flag
 *
 * Package: Constants
 */ 
#define TRAVERSAL2D 1

/**
 * The maximum number of events in the event queue
 *
 * Package: Constants
 */ 
#define MAX_EVENTS 20

/**
 * (Fixed) full display width
 *
 * Package: Constants
 */ 
#define FULLWIDTH 480

/**
 * (Fixed) full display height
 *
 * Package: Constants
 */ 
#define FULLHEIGHT 720

/**
 * (Fixed) normal width
 *
 * Package: Constants
 */ 
#define NORMALWIDTH 480

/**
 * (Fixed) normal height
 *
 * Package: Constants
 */ 
#define NORMALHEIGHT 720

/**
 * the width of the vertical scrollbar
 *
 * Package: Constants
 */ 
#define VERT_SCROLLBAR_WIDTH 16

/**
 * Color, in hex, to use as the erase color (the color used to clear away any 
 * existing pixels from a graphics object before painting the new pixels).
 *
 * Package: Constants
 */ 
#define ERASE_COLOR 0x00FFFFFF

/**
 * Whether the viewport is capable of scrolling horizontally
 *
 * Package: Constants
 */ 
#define SCROLLS_HORIZONTAL 0

/**
 * Whether the viewport is capable of scrolling vertically
 *
 * Package: Constants
 */ 
#define SCROLLS_VERTICAL 1

/**
 * Color depth the platform supports, in bits per pixel (bpp).
 *
 * Package: Constants
 */ 
#define DISPLAY_DEPTH 16

/**
 * Depth of the platform image (in bits). @note This is the bit depth of an 
 * image and it may not be the same as the bit depth of the entire system.
 *
 * Package: Constants
 */ 
#define IMAGE_DEPTH 32

/**
 * Whether the platform supports color: set it to true when color is 
 * supported; set it to false when color is not supported.
 *
 * Package: Constants
 */ 
#define DISPLAY_IS_COLOR 1

/**
 * Number of color the platform supports
 *
 * Package: Constants
 */ 
#define DISPLAY_NUM_COLOR 65536

/**
 * Number of alpha channel levels the platform supports
 *
 * Package: Constants
 */ 
#define ALPHA_LEVELS 256

/**
 * Whether the platform and MIDP implementation supports double-buffering: 
 * set to true when double-buffering is supported; set to false when 
 * double-buffering is not supported.
 *
 * Package: Constants
 */ 
#define IS_DOUBLE_BUFFERED 1

/**
 * key up code (internal)
 *
 * Package: Constants
 */ 
#define KEYCODE_UP -1

/**
 * key down code (internal)
 *
 * Package: Constants
 */ 
#define KEYCODE_DOWN -2

/**
 * key left code (internal)
 *
 * Package: Constants
 */ 
#define KEYCODE_LEFT -3

/**
 * key right code (internal)
 *
 * Package: Constants
 */ 
#define KEYCODE_RIGHT -4

/**
 * key select code (internal)
 *
 * Package: Constants
 */ 
#define KEYCODE_SELECT -5

/**
 * Turn on/off startup time measurement printouts.
 *
 * Package: Constants
 */ 
#define MEASURE_STARTUP 0

/**
 * Java heap capacity in SVM mode
 *
 * Package: Constants
 */ 
#define JAVA_HEAP_CAPACITY_SVM 1024

/**
 * Java heap capacity in MVM mode
 *
 * Package: Constants
 */ 
#define JAVA_HEAP_CAPACITY_MVM (4*1024)

/**
 * Whether both the platform and MIDP implementation provide support for a 
 * pointer (press and release). Set to true when pointer is supported; set to 
 * false when pointer is not supported.
 *
 * Package: Constants
 */ 
#define POINTER_SUPPORTED 1

/**
 * If your platform supports pointer motion and you want MIDP implementation 
 * provides support for pointer motions, set it to true; otherwise, set it to 
 * false so that MIDP runtime can provide this information to MIDlet.
 *
 * Package: Constants
 */ 
#define MOTION_SUPPORTED 1

/**
 * If your platform support key repeat and you want MIDP implementation 
 * provides support for key repeat, set this to true, otherwise set it to 
 * false.
 *
 * Package: Constants
 */ 
#define REPEAT_SUPPORTED 1

/**
 * If your platform support key repeat and you want MIDP implementation needs 
 * to support key repeat, set this to value of timeout before repeat key 
 * event generation.
 *
 * Package: Constants
 */ 
#define REPEAT_TIMEOUT 400

/**
 * If your platform support key repeat and you want MIDP implementation needs 
 * to support key repeat, set this to value of period between next repeat key 
 * event generation.
 *
 * Package: Constants
 */ 
#define REPEAT_PERIOD 80

/**
 * A value indicating that there is no need to change the current logging 
 * level.
 *
 * Package: Constants
 */ 
#define LOG_CURRENT -1

/**
 * Logging level used to report information that is not associated with any 
 * significant condition.
 *
 * Package: Constants
 */ 
#define LOG_INFORMATION 0

/**
 * Logging level used to report unexpected conditions that are typically 
 * fully recoverable.
 *
 * Package: Constants
 */ 
#define LOG_WARNING 1

/**
 * Logging level used to report unexpected conditions that are typically at 
 * least partially recoverable.
 *
 * Package: Constants
 */ 
#define LOG_ERROR 2

/**
 * Logging level used to report unexpected conditions that are typically not 
 * recoverable, or are catastrophic to the system.
 *
 * Package: Constants
 */ 
#define LOG_CRITICAL 3

/**
 * Logging level used to disable all output and all logging calls will be 
 * compiled out of the build.
 *
 * Package: Constants
 */ 
#define LOG_DISABLED 4

/**
 * Threshhold for the severity level below which log messages will not be 
 * recorded. Severity levels less than this value can be compiled out of the 
 * build.
 *
 * Package: Constants
 */ 
#define REPORT_LEVEL LOG_ERROR

/**
 * Flag to indicate whether tracing is enabled in the Logging service.
 *
 * Package: Constants
 */ 
#define TRACE_ENABLED 1

/**
 * Flag allowing client code with assert statements to be compiled out of a 
 * production build.
 *
 * Package: Constants
 */ 
#define ASSERT_ENABLED 1

/**
 * Default AMS memory reserved in MVM mode
 *
 * Package: Constants
 */ 
#define AMS_MEMORY_RESERVED_MVM 1024

/**
 * Default AMS memory limit in MVM mode
 *
 * Package: Constants
 */ 
#define AMS_MEMORY_LIMIT_MVM -1

/**
 * MIDlet start error status, when a MIDlet's constructor fails to catch a 
 * runtime exception
 *
 * Package: Constants
 */ 
#define MIDLET_CONSTRUCTOR_FAILED -1

/**
 * MIDlet start error status, when a MIDlet suite is not found
 *
 * Package: Constants
 */ 
#define MIDLET_SUITE_NOT_FOUND -2

/**
 * MIDlet start error status, when a class needed to create a MIDlet is not 
 * found.
 *
 * Package: Constants
 */ 
#define MIDLET_CLASS_NOT_FOUND -3

/**
 * MIDlet start error status, when intantiation exception is thrown during 
 * the intantiation of a MIDlet.
 *
 * Package: Constants
 */ 
#define MIDLET_INSTANTIATION_EXCEPTION -4

/**
 * MIDlet start error status, when illegal access exception is thrown during 
 * the intantiation of a MIDlet.
 *
 * Package: Constants
 */ 
#define MIDLET_ILLEGAL_ACCESS_EXCEPTION -5

/**
 * MIDlet start error status, when a MIDlet's constructor runs out of memory.
 *
 * Package: Constants
 */ 
#define MIDLET_OUT_OF_MEM_ERROR -6

/**
 * MIDlet start error status, when a the system cannot reserve enough 
 * resource to start a MIDlet suite.
 *
 * Package: Constants
 */ 
#define MIDLET_RESOURCE_LIMIT -7

/**
 * MIDlet start error status, when a MIDlet's isolate constructor throws to 
 * catch a runtime exception
 *
 * Package: Constants
 */ 
#define MIDLET_ISOLATE_CONSTRUCTOR_FAILED -9

/**
 * MIDlet start error status, when a MIDlet's ID is not given
 *
 * Package: Constants
 */ 
#define MIDLET_ID_NOT_GIVEN -10

/**
 * MIDlet start error status, when a MIDlet's class is not given
 *
 * Package: Constants
 */ 
#define MIDLET_CLASS_NOT_GIVEN -11

/**
 * MIDlet start error status, when a MIDlet's suite is disabled
 *
 * Package: Constants
 */ 
#define MIDLET_SUITE_DISABLED -12

/**
 * MIDlet start error status, when system has exceeded the maximum Isolate 
 * count.
 *
 * Package: Constants
 */ 
#define MIDLET_ISOLATE_RESOURCE_LIMIT -13

/**
 * MIDlet start error status, when that MIDlet is being updated.
 *
 * Package: Constants
 */ 
#define MIDLET_INSTALLER_RUNNING -14

/**
 * Reserved external application id for setting no MIDlet in foreground
 *
 * Package: Constants
 */ 
#define MIDLET_APPID_NO_FOREGROUND 0

/**
 * Number of times an install or delete notification has to be retried by the 
 * notification manager. Check the specification for the minimal allowed 
 * value.
 *
 * Package: Constants
 */ 
#define MAX_INSTALL_DELETE_NOTIFICATION_RETRIES 5

/**
 * The period in milliseconds after the first call to GameCanvas.flush() when 
 * any subsequent call to the method will be ignored. This is the performance 
 * optimization limiting too frequent calls to GameCanvas.flush(). 40 seems 
 * to be the optimum value. Be careful to enable the optimization as it may 
 * lead to the MIDP spec violation in some cases. The value set 0 disables 
 * the optimization.
 *
 * Package: Constants
 */ 
#define MINIMUM_FLUSH_INTERVAL 0

/**
 * The period in milliseconds of processing the last delayed call to 
 * GameCanvas.flush().
 *
 * Package: Constants
 */ 
#define DELAYED_FLUSH_PERIOD 80

/**
 * Maximal number of notifications about record store changes that can be 
 * placed into event queue of VM task.
 *
 * Package: Constants
 */ 
#define RECORD_STORE_NOTIFICATION_QUEUE_SIZE 10

/**
 * Allowed time in milliseconds to block record store changer until its 
 * notifications are acknowledged by receiver VM task.
 *
 * Package: Constants
 */ 
#define RECORD_STORE_NOTIFICATION_TIMEOUT 1000

/**
 * Number of attempts to send notification event about record store change in 
 * the case there is receiver VM task that cannot accept the event.
 *
 * Package: Constants
 */ 
#define RECORD_STORE_NOTIFICATION_ATTEMPTS 5

/**
 * No debug.
 *
 * Package: Constants
 */ 
#define MIDP_NO_DEBUG 0

/**
 * Debug: suspend the VM until the debugger sends a continue command.
 *
 * Package: Constants
 */ 
#define MIDP_DEBUG_SUSPEND 1

/**
 * Debug: do not wait for the debugger.
 *
 * Package: Constants
 */ 
#define MIDP_DEBUG_NO_SUSPEND 2

/**
 * Extension of the file to save suites settings.
 *
 * Package: Constants
 */ 
extern const pcsl_string SETTINGS_FILENAME;

/**
 * Extension of the file to save the suite installation information.
 *
 * Package: Constants
 */ 
extern const pcsl_string INSTALL_INFO_FILENAME;

/**
 * Extension of the file to save the suite application properties.
 *
 * Package: Constants
 */ 
extern const pcsl_string PROPS_FILENAME;

/**
 * Extension of the file to save the suite secure resources.
 *
 * Package: Constants
 */ 
extern const pcsl_string SECURE_EXTENSION;

/**
 * Temporary file extension.
 *
 * Package: Constants
 */ 
extern const pcsl_string TMP_EXT;

/**
 * RMS index file extension.
 *
 * Package: Constants
 */ 
extern const pcsl_string IDX_EXTENSION;

/**
 * RMS database file extension.
 *
 * Package: Constants
 */ 
extern const pcsl_string DB_EXTENSION;

/**
 * Suite's JAR file extension.
 *
 * Package: Constants
 */ 
extern const pcsl_string JAR_EXTENSION;

/**
 * Name of the file containing information about the current transaction.
 *
 * Package: Constants
 */ 
extern const pcsl_string TRANSACTION_DATA_FILENAME;

/**
 * Name of the file with the basic information about the installed suites.
 *
 * Package: Constants
 */ 
extern const pcsl_string SUITE_DATA_FILENAME;

/**
 * Name of the file with the cached icons.
 *
 * Package: Constants
 */ 
extern const pcsl_string ICON_CACHE_FILENAME;

/**
 * MIDlet property for the install notify URL.
 *
 * Package: Constants
 */ 
extern const pcsl_string INSTALL_NOTIFY_PROP;

/**
 * MIDlet property for the delete notify URL.
 *
 * Package: Constants
 */ 
extern const pcsl_string DELETE_NOTIFY_PROP;

/**
 * MIDlet property for the suite name.
 *
 * Package: Constants
 */ 
extern const pcsl_string SUITE_NAME_PROP;

/**
 * MIDlet property for the suite vendor.
 *
 * Package: Constants
 */ 
extern const pcsl_string SUITE_VENDOR_PROP;

/**
 * MIDlet property for the suite version.
 *
 * Package: Constants
 */ 
extern const pcsl_string SUITE_VERSION_PROP;

/**
 * MIDlet property for the suite description.
 *
 * Package: Constants
 */ 
extern const pcsl_string SUITE_DESC_PROP;

/**
 * Default URL to install dynamic components from. Provider-defined.
 *
 * Package: Constants
 */ 
extern const pcsl_string AMS_CMGR_DEFAULT_COMPONENT_URL;

/**
 * Storage ID for the internal storage.
 *
 * Package: Constants
 */ 
#define INTERNAL_STORAGE_ID 0

/**
 * Unused storage ID.
 *
 * Package: Constants
 */ 
#define UNUSED_STORAGE_ID (-1)

/**
 * Number of the supported storages: 2 for internal and only one external. 
 * This value should be changed if more than one external storage is 
 * supported.
 *
 * Package: Constants
 */ 
#define MAX_STORAGE_NUM 1

/**
 * Force binary application image generation during the suite installation
 *
 * Package: Constants
 */ 
#define MONET_ENABLED 0

/**
 * Force verification of all MIDlet suite classes to be done only once during 
 * the suite installation
 *
 * Package: Constants
 */ 
#define VERIFY_ONCE 0

/**
 * Defines whether suite JAR should be checked for changes since the suite 
 * installation.
 *
 * Package: Constants
 */ 
#define VERIFY_SUITE_HASH 0

/**
 * Flag to indicate whether extended MIDlet attributes support is enabled.
 *
 * Package: Constants
 */ 
#define EXTENDED_MIDLET_ATTRIBUTES_ENABLED 0

/**
 * Support of finger touch event
 *
 * Package: Constants
 */ 
#define FINGER_TOUCH 1

/**
 * MAX_ISOLATES
 *
 * Package: Constants
 */ 
#define MAX_ISOLATES 4

/**
 * Default MIDletSuite memory reserved.
 *
 * Package: Constants
 */ 
#define SUITE_MEMORY_RESERVED 100

/**
 * Default MIDletSuite Memory Limit.
 *
 * Package: Constants
 */ 
#define SUITE_MEMORY_LIMIT -1

/**
 * Global resource limit for TCP client sockets
 *
 * Package: Constants
 */ 
#define TCP_CLI_GLOBAL_LIMIT 16

/**
 * Per suite resource limit for TCP client sockets
 *
 * Package: Constants
 */ 
#define TCP_CLI_AMS_RESERVED 2

/**
 * Per suite resource limit for TCP client sockets
 *
 * Package: Constants
 */ 
#define TCP_CLI_AMS_LIMIT (TCP_CLI_GLOBAL_LIMIT)

/**
 * Per suite resource limit for TCP client sockets
 *
 * Package: Constants
 */ 
#define TCP_CLI_SUITE_RESERVED 0

/**
 * Per suite resource limit for TCP client sockets
 *
 * Package: Constants
 */ 
#define TCP_CLI_SUITE_LIMIT (TCP_CLI_GLOBAL_LIMIT - TCP_CLI_AMS_RESERVED)

/**
 * Global resource limit for TCP server sockets
 *
 * Package: Constants
 */ 
#define TCP_SER_GLOBAL_LIMIT 12

/**
 * Per suite resource limit for TCP server sockets
 *
 * Package: Constants
 */ 
#define TCP_SER_AMS_RESERVED 0

/**
 * Per suite resource limit for TCP server sockets
 *
 * Package: Constants
 */ 
#define TCP_SER_AMS_LIMIT (TCP_SER_GLOBAL_LIMIT)

/**
 * Per suite resource limit for TCP server sockets
 *
 * Package: Constants
 */ 
#define TCP_SER_SUITE_RESERVED 0

/**
 * Per suite resource limit for TCP server sockets
 *
 * Package: Constants
 */ 
#define TCP_SER_SUITE_LIMIT (TCP_SER_GLOBAL_LIMIT - TCP_SER_AMS_RESERVED)

/**
 * Global resource limit for UDP sockets
 *
 * Package: Constants
 */ 
#define UDP_GLOBAL_LIMIT 12

/**
 * Per suite resource limit for UDP sockets
 *
 * Package: Constants
 */ 
#define UDP_AMS_RESERVED 0

/**
 * Per suite resource limit for UDP sockets
 *
 * Package: Constants
 */ 
#define UDP_AMS_LIMIT (UDP_GLOBAL_LIMIT)

/**
 * Per suite resource limit for UDP sockets
 *
 * Package: Constants
 */ 
#define UDP_SUITE_RESERVED 0

/**
 * Per suite resource limit for UDP sockets
 *
 * Package: Constants
 */ 
#define UDP_SUITE_LIMIT (UDP_GLOBAL_LIMIT - UDP_AMS_RESERVED)

/**
 * Global resource limit for File handlers
 *
 * Package: Constants
 */ 
#define FILE_GLOBAL_LIMIT 30

/**
 * Per suite resource limit for File handlers
 *
 * Package: Constants
 */ 
#define FILE_AMS_RESERVED 6

/**
 * Per suite resource limit for File handlers
 *
 * Package: Constants
 */ 
#define FILE_AMS_LIMIT (FILE_GLOBAL_LIMIT)

/**
 * Per suite resource limit for File handlers
 *
 * Package: Constants
 */ 
#define FILE_SUITE_RESERVED 4

/**
 * Per suite resource limit for File handlers
 *
 * Package: Constants
 */ 
#define FILE_SUITE_LIMIT (FILE_GLOBAL_LIMIT - FILE_AMS_RESERVED)

/**
 * Global resource limit for Audio channels
 *
 * Package: Constants
 */ 
#define AUDIO_CHA_GLOBAL_LIMIT 5

/**
 * Per suite resource limit for Audio channels
 *
 * Package: Constants
 */ 
#define AUDIO_CHA_AMS_RESERVED 0

/**
 * Per suite resource limit for Audio channels
 *
 * Package: Constants
 */ 
#define AUDIO_CHA_AMS_LIMIT (AUDIO_CHA_GLOBAL_LIMIT)

/**
 * Per suite resource limit for Audio channels
 *
 * Package: Constants
 */ 
#define AUDIO_CHA_SUITE_RESERVED 0

/**
 * Per suite resource limit for Audio channels
 *
 * Package: Constants
 */ 
#define AUDIO_CHA_SUITE_LIMIT (AUDIO_CHA_GLOBAL_LIMIT - AUDIO_CHA_AMS_RESERVED)

/**
 * Global resource limit for mutable images
 *
 * Package: Constants
 */ 
#define IMAGE_MUT_GLOBAL_LIMIT 1200000

/**
 * Per suite resource limit for mutable images
 *
 * Package: Constants
 */ 
#define IMAGE_MUT_AMS_RESERVED 200000

/**
 * Per suite resource limit for mutable images
 *
 * Package: Constants
 */ 
#define IMAGE_MUT_AMS_LIMIT (IMAGE_MUT_GLOBAL_LIMIT)

/**
 * Per suite resource limit for mutable images
 *
 * Package: Constants
 */ 
#define IMAGE_MUT_SUITE_RESERVED 0

/**
 * Per suite resource limit for mutable images
 *
 * Package: Constants
 */ 
#define IMAGE_MUT_SUITE_LIMIT (IMAGE_MUT_GLOBAL_LIMIT - IMAGE_MUT_AMS_RESERVED)

/**
 * Global resource limit for immutable images
 *
 * Package: Constants
 */ 
#define IMAGE_IMMUT_GLOBAL_LIMIT 1300000

/**
 * Per suite resource limit for immutable images
 *
 * Package: Constants
 */ 
#define IMAGE_IMMUT_AMS_RESERVED 700000

/**
 * Per suite resource limit for immutable images
 *
 * Package: Constants
 */ 
#define IMAGE_IMMUT_AMS_LIMIT (IMAGE_IMMUT_GLOBAL_LIMIT)

/**
 * Per suite resource limit for immutable images
 *
 * Package: Constants
 */ 
#define IMAGE_IMMUT_SUITE_RESERVED 0

/**
 * Per suite resource limit for immutable images
 *
 * Package: Constants
 */ 
#define IMAGE_IMMUT_SUITE_LIMIT (IMAGE_IMMUT_GLOBAL_LIMIT - IMAGE_IMMUT_AMS_RESERVED)

/**
 * Per suite resource limit for storage
 *
 * Package: RMSConfig
 */ 
#define STORAGE_SUITE_LIMIT 16777216

/**
 * Global memory limit (in Bytes) for RMS caching
 *
 * Package: RMSConfig
 */ 
#define RMS_CACHE_LIMIT 3072

/**
 * No channel specified
 *
 * Package: LogChannels
 */ 
#define LC_NONE 0

/**
 * AMS module channel
 *
 * Package: LogChannels
 */ 
#define LC_AMS 500

/**
 * Core module channel
 *
 * Package: LogChannels
 */ 
#define LC_CORE 1000

/**
 * Core midpString channel
 *
 * Package: LogChannels
 */ 
#define LC_MIDPSTRING 1100

/**
 * Core malloc channel
 *
 * Package: LogChannels
 */ 
#define LC_MALLOC 1200

/**
 * Core stack usage tracing channel
 *
 * Package: LogChannels
 */ 
#define LC_CORE_STACK 1300

/**
 * Low level UI module channel
 *
 * Package: LogChannels
 */ 
#define LC_LOWUI 2000

/**
 * I18N module channel
 *
 * Package: LogChannels
 */ 
#define LC_I18N 3000

/**
 * High level UI module channel
 *
 * Package: LogChannels
 */ 
#define LC_HIGHUI 4000

/**
 * High level UI item layout channel
 *
 * Package: LogChannels
 */ 
#define LC_HIGHUI_ITEM_LAYOUT 4100

/**
 * High level UI item repaint channel
 *
 * Package: LogChannels
 */ 
#define LC_HIGHUI_ITEM_REPAINT 4200

/**
 * High level UI form layout channel
 *
 * Package: LogChannels
 */ 
#define LC_HIGHUI_FORM_LAYOUT 4300

/**
 * High level UI form paint channel
 *
 * Package: LogChannels
 */ 
#define LC_HIGHUI_ITEM_PAINT 4400

/**
 * Protocol module channel
 *
 * Package: LogChannels
 */ 
#define LC_PROTOCOL 5000

/**
 * RMS module channel
 *
 * Package: LogChannels
 */ 
#define LC_RMS 6000

/**
 * Security module channel
 *
 * Package: LogChannels
 */ 
#define LC_SECURITY 7000

/**
 * Services module channel
 *
 * Package: LogChannels
 */ 
#define LC_SERVICES 8000

/**
 * Tools module channel
 *
 * Package: LogChannels
 */ 
#define LC_TOOL 9000

/**
 * JSR180 module channel
 *
 * Package: LogChannels
 */ 
#define LC_JSR180 10000

/**
 * Event queue module channel
 *
 * Package: LogChannels
 */ 
#define LC_EVENTS 10500

/**
 * File Storage module channel
 *
 * Package: LogChannels
 */ 
#define LC_STORAGE 11000

/**
 * Push registry module channel
 *
 * Package: LogChannels
 */ 
#define LC_PUSH 11500

/**
 * Pause/Resume functionality channel
 *
 * Package: LogChannels
 */ 
#define LC_LIFECYCLE 12000

/**
 * MMAPI module channel
 *
 * Package: LogChannels
 */ 
#define LC_MMAPI 13000

/**
 * JSR290 module channel
 *
 * Package: LogChannels
 */ 
#define LC_JSR290 14000

/**
 * JSR257 module channel
 *
 * Package: LogChannels
 */ 
#define LC_JSR257 15000

/**
 * JSR258 module channel
 *
 * Package: LogChannels
 */ 
#define LC_JSR258 16000

/**
 * Information Alert
 *
 * Package: AlertTypeConstants
 */ 
#define LCDUI_ALERT_TYPE_INFO 1

/**
 * Warning Alert
 *
 * Package: AlertTypeConstants
 */ 
#define LCDUI_ALERT_TYPE_WARNING 2

/**
 * Error Alert
 *
 * Package: AlertTypeConstants
 */ 
#define LCDUI_ALERT_TYPE_ERROR 3

/**
 * Alarm Alert
 *
 * Package: AlertTypeConstants
 */ 
#define LCDUI_ALERT_TYPE_ALARM 4

/**
 * Confirmation Alert
 *
 * Package: AlertTypeConstants
 */ 
#define LCDUI_ALERT_TYPE_CONFIRMATION 5

#endif /* _MIDP_CONSTANT_CORE_H_ */
